{
  "version": 3,
  "sources": ["../src/content/TabManager.js", "../src/content/utils/storageUtils.js", "../src/content/QualityManager.js", "../src/content/mainContent.js"],
  "sourcesContent": ["export class TabManager {\r\n  constructor() {\r\n    this._currentTabId = null;\r\n    this.tabStates = {};\r\n  }\r\n\r\n  init() {\r\n    this._requestTabId();\r\n  }\r\n\r\n  _requestTabId() {\r\n    chrome.runtime.sendMessage({ type: \"getTabId\" }, (response) => {\r\n      if (response && response.tabId !== undefined) {\r\n        this._currentTabId = response.tabId;\r\n        console.log(\"[TabManager] Tab ID initialized:\", this._currentTabId);\r\n      } else {\r\n        console.error(\"[TabManager] Can't get TabID.\");\r\n      }\r\n    });\r\n  }\r\n\r\n  updateVisibility(isVisible) {\r\n    if (this._currentTabId == null) return;\r\n\r\n    chrome.runtime.sendMessage(\r\n      {\r\n        type: \"updateVisibility\",\r\n        tabId: this._currentTabId,\r\n        visible: isVisible,\r\n      },\r\n      (response) => {\r\n        console.log(\"[TabManager] Visibility sent :\", isVisible);\r\n      }\r\n    );\r\n  }\r\n}\r\n", "export async function getExtensionEnabled() {\r\n  const { extensionEnabled } = await chrome.storage.sync.get({\r\n    extensionEnabled: true,\r\n  });\r\n  return extensionEnabled;\r\n}\r\n\r\nexport async function getHiddenQuality() {\r\n  const { hiddenQuality } = await chrome.storage.sync.get({\r\n    hiddenQuality: \"auto\",\r\n  });\r\n  return hiddenQuality;\r\n}\r\n\r\nexport async function getVisibleQuality() {\r\n  const { visibleQuality } = await chrome.storage.sync.get({\r\n    visibleQuality: \"Auto\",\r\n  });\r\n  return visibleQuality;\r\n}\r\n\r\nexport async function getNotificationsEnabled() {\r\n  const { notificationEnabled } = await chrome.storage.sync.get({\r\n    notificationsEnabled: true,\r\n  });\r\n  return notificationEnabled;\r\n}\r\n", "import {\r\n  getExtensionEnabled,\r\n  getVisibleQuality,\r\n  getHiddenQuality,\r\n} from \"./utils/storageUtils.js\";\r\n\r\nexport class QualityManager {\r\n  constructor(tabManager) {\r\n    this.tabManager = tabManager;\r\n    this.debug = true;\r\n  }\r\n\r\n  init() {\r\n    chrome.runtime.onMessage.addListener((message) => {\r\n      if (message.type === \"refreshQuality\") {\r\n        this._handleRefreshRequest();\r\n      }\r\n    });\r\n  }\r\n\r\n  async _handleRefreshRequest() {\r\n    const enabled = await getExtensionEnabled();\r\n    if (!enabled) {\r\n      if (this.debug) {\r\n        console.log(\r\n          \"[QualityManager] Extension not activated. Not refreshing.\"\r\n        );\r\n      }\r\n      console.log(\"[QM] QQQ\");\r\n      return;\r\n    }\r\n\r\n    const isVisible = !document.hidden;\r\n    this.changeQualityBasedOnVisibility(isVisible);\r\n  }\r\n\r\n  async changeQualityBasedOnVisibility(isVisible) {\r\n    const targetQuality = isVisible\r\n      ? await getVisibleQuality()\r\n      : await getHiddenQuality();\r\n    if (this.debug)\r\n      console.log(\r\n        \"[QualityManager] Quality changing asked on :\",\r\n        targetQuality\r\n      );\r\n\r\n    try {\r\n      this.setPlayerQuality(targetQuality);\r\n    } catch (error) {\r\n      console.error(\"[QualityManager] Error when quality changing :\", error);\r\n    }\r\n  }\r\n\r\n  setPlayerQuality(targetQuality) {\r\n    const qualities = document.querySelectorAll(\r\n      \".ytp-quality-menu .ytp-menuitem-label\"\r\n    );\r\n\r\n    const qualityList = Array.from(qualities).map((q) => ({\r\n      element: q,\r\n      label: q.textContent.trim(),\r\n      resolution: extractResolution(q.textContent.trim()),\r\n      isPremium: q.textContent.toLowerCase().includes(\"premium\"),\r\n    }));\r\n\r\n    let finalQuality = targetQuality;\r\n\r\n    if (targetQuality.toLowerCase() === \"auto\") {\r\n      const autoQuality = qualityList.find((q) =>\r\n        q.label.toLowerCase().includes(\"auto\")\r\n      );\r\n      if (autoQuality) {\r\n        autoQuality.element.click();\r\n        finalQuality = autoQuality.label;\r\n        if (this.debug)\r\n          console.log(\r\n            \"[QualityManager] Qualit\u00E9 d\u00E9finie sur automatique :\",\r\n            finalQuality\r\n          );\r\n        return;\r\n      }\r\n    } else {\r\n      const targetResolution = parseInt(targetQuality, 10);\r\n      let exactMatch = qualityList.find(\r\n        (q) => q.resolution === targetResolution && !q.isPremium\r\n      );\r\n\r\n      if (!exactMatch) {\r\n        exactMatch = qualityList.find((q) => q.resolution === targetResolution);\r\n      }\r\n\r\n      if (exactMatch && !exactMatch.isPremium) {\r\n        exactMatch.element.click();\r\n        finalQuality = exactMatch.label;\r\n      } else {\r\n        const lowerQualities = qualityList\r\n          .filter(\r\n            (q) =>\r\n              q.resolution !== null &&\r\n              q.resolution <= targetResolution &&\r\n              !q.isPremium\r\n          )\r\n          .sort((a, b) => b.resolution - a.resolution);\r\n\r\n        if (lowerQualities.length > 0) {\r\n          lowerQualities[0].element.click();\r\n          finalQuality = lowerQualities[0].label;\r\n        } else {\r\n          const lowest = qualityList[qualityList.length - 1];\r\n          if (lowest) {\r\n            lowest.element.click();\r\n            finalQuality = lowest.label;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.debug)\r\n      console.log(\"[QualityManager] Final quality selected :\", finalQuality);\r\n  }\r\n}\r\n\r\nfunction extractResolution(label) {\r\n  const match = label.match(/(\\d+)[pP]/);\r\n  return match ? parseInt(match[1], 10) : null;\r\n}\r\n", "import { TabManager } from \"./TabManager.js\";\r\nimport { QualityManager } from \"./QualityManager.js\";\r\n// import { VisibilityListener } from \"./VisibilityListener.js\";\r\n\r\nconsole.log(\"YT Stream Saver - Content script d\u00E9marr\u00E9\");\r\n\r\nconst tabManager = new TabManager();\r\nconst qualityManager = new QualityManager(tabManager);\r\n// const visibilityListener = new VisibilityListener(tabManager, qualityManager);\r\n\r\ntabManager.init();\r\nqualityManager.init();\r\n// visibilityListener.init();\r\n"],
  "mappings": "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",
  "names": ["tabManager"]
}
